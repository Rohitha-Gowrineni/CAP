Lowest Common Ancestor of a Binary Tree

class Solution {
    public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {
        if(root==null)
           return root;
           TreeNode n1=lowestCommonAncestor(root.left,p,q);
           TreeNode n2=lowestCommonAncestor(root.right,p,q);
           if(root==p || root==q)
             return root;
           if(n1!=null && n2!=null)
              return root;
           if(n1!=null)
              return n1;
           if(n2!=null)
              return n2;
        return null;
    }
}

Range Sum of BST

class Solution {
    int sum=0;
    public void check(TreeNode root, int low, int high){
        if(root==null)
            return;
        check(root.left,low,high);
        if(root.val>=low && root.val<=high)
            sum+=root.val;
        check(root.right,low,high);
    }
    public int rangeSumBST(TreeNode root, int low, int high) {
        check(root,low,high);
        return sum;
    }
}
